# Django[语法基础](https://www.runoob.com/django/django-intro.html)

Django 采用了 MVT 的软件设计模式，即模型（Model），视图（View）和模板（Template）。MVC 模式（Model–view–controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。MVC 以一种插件式的、松耦合的方式连接在一起。Django 的 MTV 分别是指：

Django安装可根据官网的安装教程：https://docs.djangoproject.com/zh-hans/3.0/intro/install/ ，此处参考的是Django3.0安装。安装好之后执行下面命令：

```
django-admin.py    #  这条命令用来查看包含哪些操作
```

创建第一个项目，创建好项目之后查看目录结构

```
django-admin.py startproject 项目名称
$ cd 项目名称/    
$ tree
.
|-- 项目名称           # 项目的容器
|   |-- __init__.py   # 一个空文件，告诉 Python 该目录是一个 Python 包
|   |-- asgi.py       # 一个 ASGI 兼容的 Web 服务器的入口，以便运行你的项目
|   |-- settings.py   # Django 项目的设置/配置
|   |-- urls.py       # Django 项目的 URL 声明; 一份由 Django 驱动的网站"目录"
|   `-- wsgi.py       # 一个 WSGI 兼容的 Web 服务器的入口，以便运行你的项目
`-- manage.py         # 个实用的命令行工具，可让你以各种方式与该 Django 项目进行交互
```

启动服务器，默认情况下，[`runserver`](https://docs.djangoproject.com/zh-hans/3.0/ref/django-admin/#django-admin-runserver) 命令会将服务器设置为监听本机内部 IP 的 8000 端口。

```
python manage.py runserver <ip:port>  # 可选项<ip:port>，默认为 127.0.0.1:8000
```

## 2. 创建应用

请确定你现在处于 `manage.py` 所在的目录下，然后运行这行命令来创建一个应用：

```
python manage.py startapp 你的app名字

app名字/
    __init__.py
    admin.py
    apps.py
    migrations/
        __init__.py
    models.py
    tests.py
    views.py    # 编写视图，类似于Java的控制器
```

## 3. 开始写一个demo

```
django-admin startproject mysite
cd mysite
python manage.py startapp polls
```

编写视图，然后在`polls/views.py`输入如下代码

```
# polls/views.py
from django.http import HttpResponse
def index(request):
    return HttpResponse("Hello, world. You're at the polls index.")
```

为了创建 URLconf，请在 polls 目录里新建一个 `urls.py` 文件，然后在 `polls/urls.py` 中，输入如下代码

```
# polls/urls.py
from django.urls import path
from . import views
urlpatterns = [
    path('', views.index, name='index'),
]
```

在根 URLconf 文件中指定我们创建的 `polls.urls` 模块。在 `mysite/urls.py` 文件的 `urlpatterns` 列表里插入一个 `include()`， 如下：

```
# mysite/urls.py
from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('polls/', include('polls.urls')),
    path('admin/', admin.site.urls),
]
```

在命令行运行命令，然后访问 http://localhost:8000/polls/

```
python manage.py runserver
```

## 4. 数据库配置

打开 `mysite/settings.py` 。这是个包含了 Django 项目设置的 Python 模块。通常，这个配置文件使用 SQLite 作为默认数据库。通常， [`INSTALLED_APPS`](https://docs.djangoproject.com/zh-hans/3.0/ref/settings/#std:setting-INSTALLED_APPS) 默认包括了以下 Django 的自带应用：

- [`django.contrib.admin`](https://docs.djangoproject.com/zh-hans/3.0/ref/contrib/admin/#module-django.contrib.admin) -- 管理员站点， 你很快就会使用它。
- [`django.contrib.auth`](https://docs.djangoproject.com/zh-hans/3.0/topics/auth/#module-django.contrib.auth) -- 认证授权系统。
- [`django.contrib.contenttypes`](https://docs.djangoproject.com/zh-hans/3.0/ref/contrib/contenttypes/#module-django.contrib.contenttypes) -- 内容类型框架。
- [`django.contrib.sessions`](https://docs.djangoproject.com/zh-hans/3.0/topics/http/sessions/#module-django.contrib.sessions) -- 会话框架。
- [`django.contrib.messages`](https://docs.djangoproject.com/zh-hans/3.0/ref/contrib/messages/#module-django.contrib.messages) -- 消息框架。
- [`django.contrib.staticfiles`](https://docs.djangoproject.com/zh-hans/3.0/ref/contrib/staticfiles/#module-django.contrib.staticfiles) -- 管理静态文件的框架。

默认开启的某些应用需要至少一个数据表，所以，在使用他们之前需要在数据库中创建一些表。请执行以下命令：

```
python manage.py migrate
```

### 创建模型

每个模型被表示为 [`django.db.models.Model`](https://docs.djangoproject.com/zh-hans/3.0/ref/models/instances/#django.db.models.Model) 类的子类。每个模型有许多类变量，它们都表示模型里的一个数据库字段。每个字段都是 [`Field`](https://docs.djangoproject.com/zh-hans/3.0/ref/models/fields/#django.db.models.Field) 类的实例 - 比如，字符字段被表示为 [`CharField`](https://docs.djangoproject.com/zh-hans/3.0/ref/models/fields/#django.db.models.CharField) ，日期时间字段被表示为 [`DateTimeField`](https://docs.djangoproject.com/zh-hans/3.0/ref/models/fields/#django.db.models.DateTimeField) 。这将告诉 Django 每个字段要处理的数据类型。

### 激活模型

在`mysite/settings.py`中添加刚刚创建的pools

```
INSTALLED_APPS = [
    'polls.apps.PollsConfig'
}
```

> 下面这种方式是利用models来生成数据库的表

编辑 `models.py` 文件，改变模型

运行数据库迁移命令

```
python manage.py makemigrations polls
#  python manage.py sqlmigrate polls 0001    迁移到0001
```

在数据库里创建新定义的模型的数据表

```
 python manage.py migrate
```



